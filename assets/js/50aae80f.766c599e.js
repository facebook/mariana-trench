"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[206],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>m,MDXProvider:()=>p,mdx:()=>g,useMDXComponents:()=>u,withMDXComponents:()=>s});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(){return l=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},l.apply(this,arguments)}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var m=r.createContext({}),s=function(e){return function(n){var t=u(n.components);return r.createElement(e,l({},n,{components:t}))}},u=function(e){var n=r.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(m.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,m=d(e,["components","mdxType","originalType","parentName"]),s=u(t),p=a,h=s["".concat(i,".").concat(p)]||s[p]||c[p]||l;return t?r.createElement(h,o(o({ref:n},m),{},{components:t})):r.createElement(h,o({ref:n},m))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=h;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var m=2;m<l;m++)i[m]=t[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},18156:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>m});var r=t(87462),a=(t(67294),t(3905));const l={id:"build-from-source",title:"Build from Source",sidebar_label:"Build from Source"},i=void 0,o={unversionedId:"build-from-source",id:"build-from-source",title:"Build from Source",description:"This documentation aims to help you build Mariana Trench from source and run the tests.",source:"@site/documentation/build_from_source.md",sourceDirName:".",slug:"/build-from-source",permalink:"/docs/build-from-source",draft:!1,editUrl:"https://github.com/facebook/mariana-trench/tree/main/documentation/website/documentation/build_from_source.md",tags:[],version:"current",frontMatter:{id:"build-from-source",title:"Build from Source",sidebar_label:"Build from Source"},sidebar:"docs",previous:{title:"Feature Glossary",permalink:"/docs/feature-descriptions"},next:{title:"Debugging False Positives/False Negatives",permalink:"/docs/debugging-fp-fns"}},d={},m=[{value:"Supported Platforms",id:"supported-platforms",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Building and Installing",id:"building-and-installing",level:2},{value:"Install all dependencies with Homebrew",id:"install-all-dependencies-with-homebrew",level:3},{value:"Clone the repository",id:"clone-the-repository",level:3},{value:"Installation directory",id:"installation-directory",level:3},{value:"Building fmt",id:"building-fmt",level:3},{value:"Building Redex",id:"building-redex",level:3},{value:"Building Mariana Trench",id:"building-mariana-trench",level:3},{value:"Testing during development",id:"testing-during-development",level:2},{value:"Running the tests",id:"running-the-tests",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"CMake Warning: Ignoring extra path from command line: &quot;..&quot;",id:"cmake-warning-ignoring-extra-path-from-command-line-",level:3},{value:"error: externally-managed-environment",id:"error-externally-managed-environment",level:3},{value:"undefined reference to <code>pthread_create@GLIBC</code>",id:"undefined-reference-to-pthread_createglibc",level:3}],s={toc:m};function u(e){let{components:n,...t}=e;return(0,a.mdx)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("p",null,"This documentation aims to help you build Mariana Trench from source and run the tests."),(0,a.mdx)("h2",{id:"supported-platforms"},"Supported Platforms"),(0,a.mdx)("p",null,"Mariana Trench is currently supported on ",(0,a.mdx)("strong",{parentName:"p"},"macOS")," (tested on ",(0,a.mdx)("em",{parentName:"p"},"Big Sur 11.4"),") and ",(0,a.mdx)("strong",{parentName:"p"},"Linux")," (tested on ",(0,a.mdx)("em",{parentName:"p"},"Ubuntu 20.04 LTS"),")."),(0,a.mdx)("h2",{id:"dependencies"},"Dependencies"),(0,a.mdx)("p",null,"Below is a list of the required dependencies. Most of them can be installed with ",(0,a.mdx)("strong",{parentName:"p"},(0,a.mdx)("a",{parentName:"strong",href:"https://brew.sh/"},"Homebrew")),"."),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},"A C++ compiler that supports C++17 (GCC >= 7 or Clang >= 5)"),(0,a.mdx)("li",{parentName:"ul"},"Python >= 3.6"),(0,a.mdx)("li",{parentName:"ul"},"CMake >= 3.19.3"),(0,a.mdx)("li",{parentName:"ul"},"zlib"),(0,a.mdx)("li",{parentName:"ul"},"Boost >= 1.75.0"),(0,a.mdx)("li",{parentName:"ul"},"GoogleTest >= 1.10.0"),(0,a.mdx)("li",{parentName:"ul"},"JsonCpp >= 1.9.4"),(0,a.mdx)("li",{parentName:"ul"},"fmt >= 7.1.2, <= 9.1.0"),(0,a.mdx)("li",{parentName:"ul"},"RE2"),(0,a.mdx)("li",{parentName:"ul"},"Java (Optional)"),(0,a.mdx)("li",{parentName:"ul"},"Android SDK (Optional)"),(0,a.mdx)("li",{parentName:"ul"},"Redex (master)")),(0,a.mdx)("h2",{id:"building-and-installing"},"Building and Installing"),(0,a.mdx)("h3",{id:"install-all-dependencies-with-homebrew"},"Install all dependencies with Homebrew"),(0,a.mdx)("p",null,"First, follow the instructions to install ",(0,a.mdx)("strong",{parentName:"p"},(0,a.mdx)("a",{parentName:"strong",href:"https://brew.sh/"},"Homebrew"))," on your system."),(0,a.mdx)("p",null,"Then, make sure homebrew is up-to-date:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-shell"},"$ brew update\n$ brew upgrade\n")),(0,a.mdx)("p",null,"Finally, install all the dependencies."),(0,a.mdx)("p",null,"On ",(0,a.mdx)("strong",{parentName:"p"},"macOS"),", run:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-shell"},"$ brew install python3 git cmake zlib boost googletest jsoncpp re2\n")),(0,a.mdx)("p",null,"On ",(0,a.mdx)("strong",{parentName:"p"},"Linux"),", run:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-shell"},"$ brew install git cmake zlib boost jsoncpp re2\n$ brew install googletest --build-from-source # The package is currently broken.\n$ export CMAKE_PREFIX_PATH=/home/linuxbrew/.linuxbrew/opt/jsoncpp:/home/linuxbrew/.linuxbrew/opt/zlib\n")),(0,a.mdx)("p",null,"On ",(0,a.mdx)("strong",{parentName:"p"},"Linux"),", you will need to install Java to run the tests. For instance, on ",(0,a.mdx)("strong",{parentName:"p"},"Ubuntu"),", run:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-shell"},"$ sudo apt install default-jre default-jdk\n")),(0,a.mdx)("h3",{id:"clone-the-repository"},"Clone the repository"),(0,a.mdx)("p",null,"First of, clone the Mariana Trench repository. We will also set an environment variable ",(0,a.mdx)("inlineCode",{parentName:"p"},"MARIANA_TRENCH_DIRECTORY")," that points to it for the following instructions."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-shell"},'$ git clone https://github.com/facebook/mariana-trench.git\n$ cd mariana-trench\n$ MARIANA_TRENCH_DIRECTORY="$PWD"\n')),(0,a.mdx)("h3",{id:"installation-directory"},"Installation directory"),(0,a.mdx)("p",null,'We do not recommend installing Mariana Trench as root. Instead, we will install all libraries and binaries in a directory "install".\nWe will also use a directory called "dependencies" to store dependencies that we have to build from source.\nRun the following commands:'),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-shell"},"$ mkdir install\n$ mkdir dependencies\n")),(0,a.mdx)("h3",{id:"building-fmt"},"Building fmt"),(0,a.mdx)("p",null,"The 9.0 release of ",(0,a.mdx)("inlineCode",{parentName:"p"},"fmt")," has breaking changes that Mariana Trench is not yet compatible with, so for now, you need to build the library from source. You will need to do the following:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-shell"},'$ cd "$MARIANA_TRENCH_DIRECTORY/dependencies"\n$ git clone -b 9.1.0 https://github.com/fmtlib/fmt.git\n$ mkdir fmt/build\n$ cd fmt/build\n$ cmake -DCMAKE_CXX_STANDARD=17 -DFMT_TEST=OFF -DCMAKE_INSTALL_PREFIX="$MARIANA_TRENCH_DIRECTORY/install" ..\n$ make -j4\n$ make install\n')),(0,a.mdx)("h3",{id:"building-redex"},"Building Redex"),(0,a.mdx)("p",null,"We also need to build ",(0,a.mdx)("a",{parentName:"p",href:"https://fbredex.com/"},"Redex")," from source, run:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-shell"},'$ cd "$MARIANA_TRENCH_DIRECTORY/dependencies"\n$ git clone https://github.com/facebook/redex.git\n$ mkdir redex/build\n$ cd redex/build\n$ cmake -DCMAKE_INSTALL_PREFIX="$MARIANA_TRENCH_DIRECTORY/install" ..\n$ make -j4\n$ make install\n')),(0,a.mdx)("h3",{id:"building-mariana-trench"},"Building Mariana Trench"),(0,a.mdx)("p",null,"Now that we have our dependencies ready, let's build the Mariana Trench binary:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-shell"},'$ cd "$MARIANA_TRENCH_DIRECTORY"\n$ mkdir build\n$ cd build\n$ cmake \\\n  -DREDEX_ROOT="$MARIANA_TRENCH_DIRECTORY/install" \\\n  -Dfmt_ROOT="$MARIANA_TRENCH_DIRECTORY/install" \\\n  -DCMAKE_INSTALL_PREFIX="$MARIANA_TRENCH_DIRECTORY/install" \\\n  ..\n$ make -j4\n$ make install\n')),(0,a.mdx)("p",null,"Finally, let's install Mariana Trench as a Python package.\nFirst, follow the instructions to create a ",(0,a.mdx)("a",{parentName:"p",href:"https://packaging.python.org/tutorials/installing-packages/#creating-virtual-environments"},"virtual environment"),".\nOnce inside a virtual environment (after using the ",(0,a.mdx)("inlineCode",{parentName:"p"},"activate")," script), run:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-shell"},'$ cd "$MARIANA_TRENCH_DIRECTORY"\n$ python scripts/setup.py \\\n  --binary "$MT_INSTALL_DIRECTORY/bin/mariana-trench-binary" \\\n  --pyredex "$MT_INSTALL_DIRECTORY/bin/pyredex" \\\n  install\n')),(0,a.mdx)("h2",{id:"testing-during-development"},"Testing during development"),(0,a.mdx)("p",null,"If you are making changes to Mariana Trench, you can use the ",(0,a.mdx)("inlineCode",{parentName:"p"},"mariana-trench")," wrapper inside the build directory:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-shell"},"$ cd build\n$ ./mariana-trench --help\n")),(0,a.mdx)("p",null,"This way, you don't have to call ",(0,a.mdx)("inlineCode",{parentName:"p"},"scripts/setup.py")," between every changes.\nPython changes will be automatically picked up.\nC++ changes will be picked up after running ",(0,a.mdx)("inlineCode",{parentName:"p"},"make"),"."),(0,a.mdx)("p",null,"Note that you will need to install all python dependencies:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-shell"},"$ pip install pyre_extensions fb-sapp\n")),(0,a.mdx)("h2",{id:"running-the-tests"},"Running the tests"),(0,a.mdx)("p",null,"To run the tests after building Mariana Trench, use:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-shell"},"$ cd build\n$ make check\n")),(0,a.mdx)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,a.mdx)("p",null,"Here are a set of errors you might encounter, and their solutions."),(0,a.mdx)("h3",{id:"cmake-warning-ignoring-extra-path-from-command-line-"},'CMake Warning: Ignoring extra path from command line: ".."'),(0,a.mdx)("p",null,"You probably tried to run ",(0,a.mdx)("inlineCode",{parentName:"p"},"cmake")," from the wrong directory.\nMake sure that ",(0,a.mdx)("inlineCode",{parentName:"p"},"$MARIANA_TRENCH_DIRECTORY")," is set correctly (test with ",(0,a.mdx)("inlineCode",{parentName:"p"},"echo $MARIANA_TRENCH_DIRECTORY"),").\nThen, run the instructions again from the beginning of the section you are in."),(0,a.mdx)("h3",{id:"error-externally-managed-environment"},"error: externally-managed-environment"),(0,a.mdx)("p",null,"You probably tried to run ",(0,a.mdx)("inlineCode",{parentName:"p"},"python scripts/setup.py")," without a virtual environment. Create a ",(0,a.mdx)("a",{parentName:"p",href:"https://packaging.python.org/tutorials/installing-packages/#creating-virtual-environments"},"virtual environment")," first."),(0,a.mdx)("h3",{id:"undefined-reference-to-pthread_createglibc"},"undefined reference to ",(0,a.mdx)("inlineCode",{parentName:"h3"},"pthread_create@GLIBC")),(0,a.mdx)("p",null,"This seems to happen on Linux, when your operating system has an old version of glibc, which doesn't match the version used by Homebrew.\nTry upgrading your operating system to the last version."),(0,a.mdx)("p",null,"Another option is to use the compiler (gcc) from Homebrew directly:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},"$ brew install gcc\nexport CC=/home/linuxbrew/.linuxbrew/bin/cc\nexport CXX=/home/linuxbrew/.linuxbrew/bin/c++\n")),(0,a.mdx)("p",null,"You will need to run all the instructions from this page again, starting from ",(0,a.mdx)("inlineCode",{parentName:"p"},"Clone the repository"),". We recommend starting from scratch, i.e delete the mariana-trench directory."))}u.isMDXComponent=!0}}]);